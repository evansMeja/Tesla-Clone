{"version":3,"sources":["features/car/carSlice.js","components/Header.js","components/Section.js","components/Home.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["carSice","createSlice","name","initialState","cars","reducers","selectCars","state","car","Header","useState","burgerStatus","setBurgerStatus","useSelector","Container","src","map","index","href","RightMenu","CustomeMenu","onClick","BurgerNav","show","CloseWrapper","CustomClose","styled","div","Menu","MenuIcon","CloseIcon","props","Section","title","description","leftBtnText","righBtnText","backgroundImg","Wrap","bgImage","bottom","ItemText","Buttons","ButtonGroup","LeftButton","RightButton","DownArrow","img","Home","App","store","configureStore","reducer","carReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0efda507.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    cars: ['Mode sS', 'Model 3', 'Model X', 'Model Y', 'Solar Roof', 'Solar Panels']\r\n}\r\n\r\nconst carSice = createSlice({\r\n    name: \"car\",\r\n    initialState,\r\n    reducers: {}\r\n})\r\n\r\nexport const selectCars = state => state.car.cars\r\n\r\nexport default carSice.reducer","import React, { useState } from 'react'\r\n\r\nimport styled from 'styled-components'\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport { selectCars } from '../features/car/carSlice'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction Header() {\r\n    const [burgerStatus, setBurgerStatus] = useState(false)\r\n    const cars = useSelector(selectCars)\r\n    return (\r\n        <Container>\r\n            <a>\r\n                <img src='./assets/images/logo.svg' />\r\n            </a>\r\n\r\n            <Menu>\r\n                {cars && cars.map((car, index) => <a href=''>{car}</a>)}\r\n            </Menu>\r\n\r\n            <RightMenu>\r\n                <a href=''>Shop</a>\r\n\r\n                <a href=''>Tesla Account</a>\r\n\r\n                <CustomeMenu onClick={() => { setBurgerStatus(true) }} />\r\n            </RightMenu>\r\n\r\n            <BurgerNav show={burgerStatus}>\r\n                <CloseWrapper>\r\n                    <CustomClose onClick={() => { setBurgerStatus(false) }} />\r\n                </CloseWrapper>\r\n\r\n                {cars && cars.map((car, index) => <li key={index}><a href='#'>{car}</a></li>)}\r\n\r\n\r\n                <li><a href='#'>Used Inventory</a></li>\r\n                <li><a href='#'>Trade In</a></li>\r\n                <li><a href='#'>Cyber Truck</a></li>\r\n                <li><a href='#'>Roadster</a></li>\r\n            </BurgerNav>\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n\r\nconst Container = styled.div`\r\nmin-height:50px;\r\nposition:fixed;\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:space-between;\r\npadding:0 20px;\r\ntop:0;\r\nleft:0;\r\nright:0;\r\nz-index:1;\r\n`\r\n\r\nconst Menu = styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content: center;\r\nflex:1;\r\na{\r\n    font-weight:600;\r\n    text-transform:uppercase;\r\n    padding:0 10px;\r\n    flex-wrap:nowrap;\r\n}\r\n@media (max-width:768px){\r\n    display:none\r\n}\r\n`\r\n\r\nconst RightMenu = styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\na{\r\n    font-weight:600;\r\n    text-transform:uppercase;\r\n    margin-right:10px;\r\n    flex-wrap:nowrap;\r\n}\r\n`\r\n\r\nconst CustomeMenu = styled(MenuIcon)`\r\ncursor:pointer;\r\n`\r\n\r\nconst CustomClose = styled(CloseIcon)`\r\ncursor:pointer;`\r\n\r\nconst BurgerNav = styled.div`\r\nposition:fixed;\r\ntop:0;\r\nbottom:0;\r\nright:0;\r\nbackground:white;\r\nwidth:300px;\r\nz-index:16;\r\nlist-style:none;\r\npadding:20px;\r\ndisplay:flex;\r\nflex-direction:column;\r\ntext-align:start;\r\ntransform:${props => props.show ? 'translateX(0)' : 'translateX(100%)'};\r\ntransition: transform 0.4s ease-in;\r\nli{\r\n    padding: 15px 0;\r\n    border-bottom: 1px solid rgba(0,0,0,.2);\r\n\r\n    a{\r\n        font-weight:600;\r\n    }\r\n}\r\n`\r\n\r\nconst CloseWrapper = styled.div`\r\ndisplay:flex;\r\njustify-content:flex-end;`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Fade from 'react-reveal/Fade'\r\n\r\nfunction Section({\r\n    title,\r\n    description,\r\n    leftBtnText,\r\n    righBtnText,\r\n    backgroundImg\r\n}) {\r\n    return (\r\n        <Wrap bgImage={backgroundImg}>\r\n            <Fade bottom>\r\n                <ItemText>\r\n                    <h1>{title}</h1>\r\n                    <p>{description}</p>\r\n                </ItemText>\r\n            </Fade>\r\n\r\n            <Buttons>\r\n                <Fade bottom>\r\n                    <ButtonGroup>\r\n                        <LeftButton>\r\n                            {leftBtnText}\r\n                        </LeftButton>\r\n                        {righBtnText &&\r\n                            <RightButton>\r\n                                {righBtnText}\r\n                            </RightButton>\r\n                        }\r\n                    </ButtonGroup>\r\n                </Fade>\r\n                <DownArrow src='./assets/images/down-arrow.svg' />\r\n            </Buttons>\r\n        </Wrap>\r\n    )\r\n}\r\n\r\nexport default Section\r\n\r\nconst Wrap = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background:orange;\r\n    background-size:fit;\r\n    background-image:${props => `url(\"./assets/images/${props.bgImage}\")`};\r\n    background-position:center;\r\n    background-repeat:no-repeat;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:space-between; \r\n    align-items:center;\r\n`\r\n\r\nconst ItemText = styled.div`\r\npadding-top:15vh;\r\ntext-align:center;\r\n`\r\n\r\nconst ButtonGroup = styled.div`\r\ndisplay:flex;\r\nmargin-bottom:100px;\r\n@media (max-width: 768px){\r\n    flex-direction:column;\r\n}\r\n`\r\n\r\nconst LeftButton = styled.div`\r\nbackground-color:rgba(23,26,32,0.8);\r\nheight:40px;\r\nwidth:256px;\r\ncolor:white;\r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:center;\r\nborder-radius:100px;\r\nopacity:0.8;\r\ntext-transform:uppercase;\r\ncursor:pointer;\r\nmargin:8px;\r\n`\r\n\r\nconst RightButton = styled(LeftButton)`\r\nbackground:white;\r\ncolor:black;\r\nopaacity:0.65;\r\n`\r\n\r\nconst DownArrow = styled.img`\r\nmargin-top:20px;\r\nheight:40px;\r\nanimation: animateDown 1s infinite;\r\noverflow-x:hidden;\r\ntext-align:center;\r\n`\r\n\r\nconst Buttons = styled.div`\r\n`","import React from 'react'\r\nimport Section from './Section';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <Section\r\n                title='Model S'\r\n                description='Order Online For Touchless Devivery'\r\n                backgroundImg='model-s.jpg'\r\n                leftBtnText='Custome Order'\r\n                righBtnText='Existing Inventory'\r\n            />\r\n            <Section\r\n                title='Model Y'\r\n                description='Order Online For Touchless Devivery'\r\n                backgroundImg='model-y.jpg'\r\n                leftBtnText='Custome Order'\r\n                righBtnText='Existing Inventory'\r\n            />\r\n            <Section\r\n                title='Model 3'\r\n                description='Order Online For Touchless Devivery'\r\n                backgroundImg='model-3.jpg'\r\n                leftBtnText='Custome Order'\r\n                righBtnText='Existing Inventory'\r\n            />\r\n            <Section\r\n                title='Model X'\r\n                description='Order Online For Touchless Devivery'\r\n                backgroundImg='model-x.jpg'\r\n                leftBtnText='Custome Order'\r\n                righBtnText='Existing Inventory'\r\n            />\r\n            <Section\r\n                title='Lowest Cost Solar Panels in America'\r\n                description='Money Back Guarantee'\r\n                backgroundImg='solar-panel.jpg'\r\n                leftBtnText='Order Now'\r\n                righBtnText='Learn More'\r\n            />\r\n            <Section\r\n                title='Accessories'\r\n                description=''\r\n                backgroundImg='accessories.jpg'\r\n                leftBtnText='Shop Now'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\nimport './App.css';\nimport styled from 'styled-components'\nimport Header from './components/Header'\nimport Home from './components/Home'\n\nfunction App() {\n  return (\n    <Container>\n      <Header />\n      <Home />\n    </Container>\n  );\n}\n\nexport default App;\n\n\nconst Container = styled.div`\nheight:100vh;\n`\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport carReducer from '../features/car/carSlice'\n\nexport const store = configureStore({\n  reducer: {\n    car: carReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}